---
# Only the main Sass file needs front matter (the dashes are enough)
---

@charset "utf-8";
@import url("https://fonts.googleapis.com/css?family=Muli:400,700&display=swap");

// Variables
$color--default: #3a3a3a;
$color--light: lighten($color--default, 65%);
$color--primary: #429bfc;
$color--secondary: #429bfc;
$color--background: #f8faff;

$size--unit: 8px;

$layout--max-width: 1000px;

// Default styling
* {
  box-sizing: border-box;
  font-family: "Muli", sans-serif;
  font-size: $size--unit * 2;
  color: $color--default;
}

html,
body {
  padding: 0;
  margin: 0;
  background-color: $color--background;
  margin-top: 80px;
}

// Mixins

@mixin xsm {
    @media (max-width: 724px) {
        @content;
    }
}

@mixin sm {
  @media (max-width: #{$layout--max-width}) {
    @content;
  }
}

@mixin ms {
  @media (min-width: #{$layout--max-width}) {
    @content;
  }
}

@mixin button-hover($color) {
  position: relative;
  z-index: 2;

  &:hover {
    transition: 0.2s all;
    background-color: darken($color, 10%);
    &:before {
      transform: scale(1.1, 1.5);
    }
  }

  &:before {
    content: " ";
    position: absolute;
    background-color: $color;
    top: 0;
    left: 0;
    border-radius: 4px;
    width: 100%;
    height: 100%;
    opacity: 0.4;
    z-index: -1;
    transform: scale(1);
    transition: all 0.3s cubic-bezier(0.16, 0.8, 0.66, 1.54);
  }
}

@mixin fit-to-layout-and-center {
  width: 100%;
  max-width: $layout--max-width;
  margin-left: auto;
  margin-right: auto;
  @include sm {
    padding-left: $size--unit * 3;
    padding-right: $size--unit * 3;
  }
}

// Components
.header {
  width: 100%;
  display: flex;
  align-items: center;
  padding-top: $size--unit * 4;
  padding-bottom: $size--unit * 4;
  border-bottom: 1px solid $color--light;
  position: fixed; /* Make the header fixed */
  top: 0; /* Stick the header to the top of the viewport */
  background-color: white; /* Optional: Add background color to the header */
  z-index: 1000; /* Ensure the header is above other content */

  &__container {
    display: flex;
    justify-content: space-between;
    @include fit-to-layout-and-center;
  }

  &__branding {
    all: unset;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__logo {
    max-height: $size--unit*4;
    margin-right: $size--unit*1;
  }

  &__title {
    font-weight: bold;
    font-size: $size--unit * 3;
    cursor: pointer;
  }

  &__navigation {
    font-weight: bold;
    font-size: $size--unit * 3;
    cursor: pointer;
 } 
  &__navigation-item {
    margin-right: 20px; /* Adjust spacing between navigation items */
  }
  .header__search {
    display: inline-block;
    margin-left: 20px; /* Adjust spacing between navigation and search */
  }
     
  .header__search-text {
    cursor: pointer;
    font-weight: bold; /* Use the same font weight as navigation */
  }
     
  .header__search-input {
    width: 0; /* Initially hide the input field */
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-radius: 20px;
    background-color: transparent;
    color: #333;
    font-size: $size--unit * 3; /* Use the same font size as navigation */
    font-weight: bold; /* Use the same font weight as navigation */
    cursor: text;
    outline: none;
    transition: width 0.3s ease; /* Add transition effect for width */
  }
     
  .header__search-input.active {
    width: 150px; /* Expand input field width when active */
  }

.header__actions {
  display: flex;
  align-items: center;
}

.header__checkout {
  border: none;
  background: none;
  cursor: pointer;
  display: flex;
  align-items: center;
}

.header__checkout-fill {
  fill: $color--primary; /* Use the primary color for the cart icon */
}

.header__actions .snipcart-total-price {
  font-size: 16px; /* Adjust font size for the total price */
  margin-left: 5px; /* Add some spacing between the icon and the price */
}
}

.main {
  @include fit-to-layout-and-center;
}

.product {
  display: flex;
  align-items: center;
  flex-direction: row;
  /**
   * prevent children elements from "bleeding through" in 3D space
   * by creating a 3D transform container in the parent
   */
  transform: translate3d(0px, 0px, 0px);
  &:nth-of-type(even) {
    flex-direction: row-reverse;
  }

  &:nth-last-of-type(odd) & {
    &__information {
      margin-left: 0;
      margin-right: $size--unit * 4;
      @include sm {
        margin-right: 0;
      }
    }

    &__image {
      transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(30px);
      box-shadow: 30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
      @include sm {
        transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(-30px);
      }
    }
  }

  &:not(:last-child) {
    margin-bottom: $size--unit * 12;
  }

  @include sm {
    flex-direction: column;
    &:nth-of-type(even) {
      flex-direction: column;
    }
    justify-content: center;
  }

  &__information {
    flex: 1;
    margin-left: $size--unit * 4;
    @include sm {
      margin-left: 0;
    }
  }

  &__image {
    flex: 1;
    height: 100%;
    width: 100%;
    max-width: 500px;
    max-height: 400px;
    background-size: cover;
    transform: perspective(650px) rotateZ(-5deg) rotateX(2.5deg) rotateY(15deg) scale(0.8) translateX(-30px);
    box-shadow: -30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
    @include sm {
      transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(-30px);
      box-shadow: 30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
      &:last-child {
        display: none;
      }
    }

    @include ms {
      &:not(:last-child) {
        display: none;
      }
    }
    margin-right: auto;
    border-radius: $size--unit;
  }

  &__title {
    margin-top: 0;
    font-size: $size--unit * 5;
  }

  &__description {
    font-size: $size--unit * 2.5;
    line-height: $size--unit * 3.5;
  }
}

.post {
  display: flex;
  align-items: center;
  flex-direction: row;
  /**
   * prevent children elements from "bleeding through" in 3D space
   * by creating a 3D transform container in the parent
   */
  transform: translate3d(0px, 0px, 0px);
  &:nth-of-type(even) {
    flex-direction: row-reverse;
  }

  &:nth-last-of-type(odd) & {
    &__information {
      margin-left: 0;
      margin-right: $size--unit * 4;
      @include sm {
        margin-right: 0;
      }
    }

    &__image {
      transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(30px);
      box-shadow: 30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
      @include sm {
        transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(-30px);
      }
    }
  }

  &:not(:last-child) {
    margin-bottom: $size--unit * 12;
  }

  @include sm {
    flex-direction: column;
    &:nth-of-type(even) {
      flex-direction: column;
    }
    justify-content: center;
  }

  &__information {
    flex: 1;
    margin-left: $size--unit * 4;
    @include sm {
      margin-left: 0;
    }
  }

  &__image {
    flex: 1;
    height: 100%;
    width: 100%;
    max-width: 500px;
    max-height: 400px;
    background-size: cover;
    transform: perspective(650px) rotateZ(-5deg) rotateX(2.5deg) rotateY(15deg) scale(0.8) translateX(-30px);
    box-shadow: -30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
    @include sm {
      transform: perspective(650px) rotateZ(5deg) rotateX(-2.5deg) rotateY(-15deg) scale(0.8) translateX(-30px);
      box-shadow: 30px 30px 50px transparentize(darken($color--primary, 50%), 0.9);
      &:last-child {
        display: none;
      }
    }

    @include ms {
      &:not(:last-child) {
        display: none;
      }
    }
    margin-right: auto;
    border-radius: $size--unit;
  }

  &__title {
    margin-top: 0;
    font-size: $size--unit * 5;
  }

  &__description {
    font-size: $size--unit * 2.5;
    line-height: $size--unit * 3.5;
  }
}

.qty{
  background-color: transparent;
  border-radius: 3px;
  padding:3px 5px;
  border: solid 1px $color--primary;
  width: 45px;  
  text-align:center;
}

.buy-button {
  cursor: pointer;
  color: white;
  background-color: $color--primary;
  border: 1px solid darken($color--primary, 10%);
  border-radius: 5px;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 14px;
  letter-spacing: 1px;
  padding: 10px 20px;
  margin-top: 20px;
  display: inline-block;
  transition: background-color 0.3s, border-color 0.3s, transform 0.3s;
}

.buy-button:hover {
  background-color: lighten($color--primary, 10%);
  border-color: darken($color--primary, 5%);
}

.buy-button.added-to-cart {
  background-color: green;
  border-color: darkgreen;
}

.buy-button.added-to-cart:hover {
  background-color: darken(green, 10%);
  border-color: darken(darkgreen, 10%);
}

.login-button { all: unset; color: white; background-color: #429bfc; border: 1px solid #3393fc; text-shadow: 2px 2px 5px #3393fc; border-radius: 3px; font-weight: bold; text-transform: uppercase; font-size: 12px; letter-spacing: 2px; padding: 8px; padding-left: 24px; padding-right: 24px; position: relative; z-index: 2; margin: 0 16px; }

.login-button:hover { transition: 0.2s all; background-color: #1080fb; }

.login-button:hover:before { transform: scale(1.1, 1.5); }

.login-button:before { content: " "; position: absolute; background-color: #429bfc; top: 0; left: 0; border-radius: 4px; width: 100%; height: 100%; opacity: 0.4; z-index: -1; transform: scale(1); transition: all 0.3s cubic-bezier(0.16, 0.8, 0.66, 1.54); }

.footer {
  border-top: 1px solid $color--light;
  margin-top: $size--unit * 12;
  &__content {
    display: flex;
    @include fit-to-layout-and-center();
    padding-top: $size--unit * 4;
    padding-bottom: $size--unit * 4;
  }

  &__socials {
    margin-left: auto;
  }
}

.snipcart-layout__header {
  min-height: 80px;
  z-index: 101; /* Ensure the Snipcart header appears above other content */
}

.contact-form {
    background-color: #f9f9f9;
    padding: 20px;
}

.contact-form h3 {
    margin-bottom: 10px;
}

.contact-form form label {
    display: block;
    margin-bottom: 5px;
}

.contact-form form input[type="text"],
.contact-form form input[type="email"],
.contact-form form textarea {
    width: 100%;
    margin-bottom: 10px;
    padding: 8px;
}

.contact-form form textarea {
    resize: vertical; /* Allow vertical resizing */
}

.contact-form form button {
    background-color: #333;
    color: #fff;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
}

.contact-form form button:hover {
    background-color: #555;
}

.go-back {
    display: flex;
    color: white;
    padding-top: $size--unit*3;
    padding-bottom: $size--unit*3;
    background-color: #888f91;
    box-shadow: 0px 0px 10px transparentize($color--default, 0.8);
    border-bottom: 1px solid darken(#888f91, 5%);

    &__container {
        @include fit-to-layout-and-center;
        display: flex;
        justify-content: space-between;
        align-items: center;
        @include xsm {
            flex-direction: column;
            text-align: center;

            a {
                margin-bottom: $size--unit*2;
            }
        }

        a, span {
            color: white;
        }

        a {
            display: inline-block;
            background-color: #f6e770;
            box-shadow: 0px 3px 16px darken(#888f91, 5%);
            &:hover {
                transition: background-color 0.25s;
                background-color: darken(#f6e770, 5%);
            }
            padding: $size--unit*1;
            padding-left: $size--unit*3;
            padding-right: $size--unit*3;
            color: $color--default;
            text-decoration: none;
            border-radius: 4px;
            text-transform: uppercase;
        }


}

}
/* Dark mode styles */
.dark-mode {
  background-color: #111;
  color: white;
}

/* Toggle switch styles */
.toggle-container {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.toggle {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  border-radius: 34px;
  transition: background-color 0.3s;
}

.toggle::before {
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
  width: 26px;
  height: 26px;
  background-color: #fff; /* Default color for toggle switch */
  border-radius: 50%;
  transition: transform 0.3s;
}

.sun-icon,
.moon-icon {
  position: absolute;
  top: 4px;
  left: 4px;
  width: 26px;
  height: 26px;
  transition: transform 0.3s;
}

.sun-icon {
  transform: translateX(0); /* Initially positioned to show sun icon */
}

.moon-icon {
  transform: translateX(30px); /* Initially positioned to hide moon icon */
}

input[type="checkbox"] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}

input[type="checkbox"]:checked + .toggle {
  background-color: #2196F3; /* Change to your preferred color for dark mode */
}

input[type="checkbox"]:checked + .toggle::before {
  transform: translateX(26px); /* Move toggle indicator to the right */
}

input[type="checkbox"]:checked + .toggle + .sun-icon {
  transform: translateX(0); /* Show sun icon when dark mode is off */
}

input[type="checkbox"]:checked + .toggle + .moon-icon {
  transform: translateX(30px); /* Show moon icon when dark mode is on */
}

